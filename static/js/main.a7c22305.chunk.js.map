{"version":3,"sources":["routes/Toggle.module.css","api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Toggle.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["module","exports","BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","isDarkAtom","atom","key","default","Chart","isDark","useRecoilValue","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","time_close","open","high","low","close","options","theme","mode","chart","height","toolbar","show","background","grid","stroke","width","yaxis","xaxis","labels","axisTicks","axisBorder","categories","tooltip","y","formatter","value","toFixed","PriceUl","styled","ul","PriceLi","li","prop","accentColor","Price","quotes","USD","percent_change_24h","percent_change_7d","percent_change_30d","Toggle","setDarkAtom","useSetRecoilState","className","styles","emoji","switch","onChange","prev","toggleCheckbox","slider","Container","div","Header","header","Title","h1","props","BackBtn","button","bgColor","textColor","Loader","span","Overview","tabColor","OverviewItem","Description","p","Tabs","Tab","isActive","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","Helmet","to","rank","symbol","description","total_supply","max_supply","path","CoinsList","listColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","basename","process","darktheme","lighttheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.a7c22305.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggleCheckbox\":\"Toggle_toggleCheckbox__a7ONN\",\"switch\":\"Toggle_switch__1teUE\",\"slider\":\"Toggle_slider__dz4Cx\",\"toggleName\":\"Toggle_toggleName__3qzEI\",\"emoji\":\"Toggle_emoji__1rTgT\"};","const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  //Date.now() 밀리센컨드로 나오는 현재시간\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: false,\n});\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface IChartProps {\n  coinId: string;\n}\n\nfunction Chart({ coinId }: IChartProps) {\n  const isDark = useRecoilValue(isDarkAtom);\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart..\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"price\",\n              data: data?.map((price) => [\n                price.time_close,\n                price.open,\n                price.high,\n                price.low,\n                price.close,\n              ]),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? \"dark\" : \"light\",\n            },\n            chart: {\n              height: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: true },\n            stroke: {\n              width: 2.5,\n            },\n            yaxis: { show: false },\n            xaxis: {\n              labels: { show: false },\n              axisTicks: { show: false },\n              axisBorder: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            tooltip: {\n              y: {\n                formatter: (value) => `${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinTickers } from \"../api\";\nimport styled from \"styled-components\";\n\ninterface IPriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\ninterface ChartProps {\n  coinId: string;\n}\n\nconst PriceUl = styled.ul`\n  padding: 0 5px;\n`;\nconst PriceLi = styled.li`\n  display: flex;\n  justify-content: space-between;\n  background-color: #e6e6e633;\n  padding: 15px;\n  border-radius: 15px;\n  margin-bottom: 10px;\n  span:first-child {\n    text-transform: uppercase;\n  }\n  span:last-child {\n    font-weight: bold;\n    color: ${(prop) => prop.theme.accentColor};\n  }\n`;\nfunction Price({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IPriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart..\"\n      ) : (\n        <PriceUl>\n          <PriceLi>\n            <span>PRICE</span>\n            <span>${data?.quotes.USD.price.toFixed(2)}</span>\n          </PriceLi>\n          <PriceLi>\n            <span>percent_change_24h</span>\n            <span>{data?.quotes.USD.percent_change_24h.toFixed(2)}%</span>\n          </PriceLi>\n          <PriceLi>\n            <span>percent_change_7d</span>\n            <span>{data?.quotes.USD.percent_change_7d.toFixed(2)}%</span>\n          </PriceLi>\n          <PriceLi>\n            <span>percent_change_30d</span>\n            <span>{data?.quotes.USD.percent_change_30d.toFixed(2)}%</span>\n          </PriceLi>\n        </PriceUl>\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n","import { useState } from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\nimport styles from \"./Toggle.module.css\";\n\ninterface IToggle {}\n\nconst Toggle = ({}: IToggle) => {\n  const isDark = useRecoilValue(isDarkAtom);\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\n\n  return (\n    <>\n      <span className={styles.emoji}>{isDark ? \"🌙\" : \"☀️\"}</span>\n      <label className={styles.switch}>\n        <input\n          type=\"checkbox\"\n          onChange={toggleDarkAtom}\n          name=\"toggleCheckbox\"\n          className={styles.toggleCheckbox}\n        />\n        <span className={styles.slider} />\n      </label>\n    </>\n  );\n};\n\nexport default Toggle;\n","import { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nimport Toggle from \"./Toggle\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\n//styled\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 20vh;\n  max-width: 480px;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n  width: 400px;\n  display: flex;\n  align-items: center;\n`;\nconst BackBtn = styled.button`\n  color: ${(props) => props.theme.bgColor};\n  background-color: ${(props) => props.theme.textColor};\n  border: none;\n  padding: 5px;\n  margin-left: 10px;\n  font-style: italic;\n  cursor: pointer;\n  width: 50px;\n`;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n//header\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.tabColor};\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.tabColor};\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\n//I\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface IInfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface IPriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface ICoinProps {}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<IPriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n\n  //두가지 정보가 필요해서 다른 이름으로 데이터 로딩 넘겨줘야함\n  //argument 필요할때 ()=>fn(argument)\n\n  /* const [loading, setLoading] = useState(true);\n  const [info, setInfo] = useState<IInfoData>();\n  const [priceInfo, setPriceInfo] = useState<IPriceData>();\n  useEffect(() => {\n    (async () => {\n      const infoData = await (\n        await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n      ).json();\n      // console.log(infoData);\n      const priceData = await (\n        await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n      ).json();\n      // console.log(priceData);\n      setInfo(infoData);\n      setPriceInfo(priceData);\n      setLoading(false); //시작시 데이터 받아와지면 실행 안되면 true로 글귀나오는중\n    })();\n  }, [coinId]); //어차피 안변함 params */\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading..\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading..\" : infoData?.name}\n        </Title>\n        <Toggle />\n        <Link to={\"/\"}>\n          <BackBtn>Back</BackBtn>\n        </Link>\n        {/* home 안 거쳐 오면 state가 undefined여서 state가 false일때 */}\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(5)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/${coinId}/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/${coinId}/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nimport { Helmet } from \"react-helmet\";\nimport Toggle from \"./Toggle\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.listColor};\n  border: 1.75px solid ${(props) => props.theme.accentColor};\n  color: ${(props) => props.theme.textColor};\n  padding: 20px;\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    padding: 20px;\n    transition: color 0.2s ease-in;\n    display: flex; //글 말고도 끝까지 커셔 변화\n    align-items: center;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n  width: 85%;\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\ninterface ICoinsProps {}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  /* const [coins, setCoins] = useState<CoinInterface[]>([]);\n  //처음에 아무것도 안찍혀서, useEffect에서 바로 실행되게\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    (async () => {\n      setCoins(json.slice(0, 100));\n      setLoading(false);\n    })();\n  }, []); */\n\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n        <Toggle />\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\ninterface IRouterProps {}\n\nfunction Router() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import styled, { DefaultTheme } from \"styled-components\";\n\nexport const darktheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n  tabColor: \"#9c88ff45\",\n  listColor: \"transparent\",\n};\nexport const lighttheme: DefaultTheme = {\n  listColor: \"white\",\n  bgColor: \"#f5f6fa\",\n  textColor: \"#2f3640\",\n  accentColor: \"#9c88ff\",\n  tabColor: \"#9c88ff25\",\n};\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { lighttheme, darktheme } from \"./theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\nbody{\n  font-weight:300;\n  line-height:1.2;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na{\n  text-decoration:none;\n  color: inherit; //부모의 색 가져옴\n}\n*{box-sizing:border-box;}\n`;\n\n// const Top = styled.div`\n//   max-width: 480px;\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   margin: 0 auto;\n//   margin-top: 20px;\n// `;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darktheme : lighttheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}